#!/system/bin/sh
#
# :: Atucha
# :: Originaly based on SSSwitch (ch33kybutt)
# :: luismaf (at) gmail(dot)ccom
# :: www.tecnoadictos.com.ar
# ::
VERSION=8.1;
echo 1066000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
echo 88000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;

PROCESSOR_MAX_FREQ=`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq`;
PROCESSOR_MIN_FREQ=`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq`;
DEFAULT_UNDERVOLT=`cat /proc/xmister/undervolt`; # max: 150/160

# load settings:
. /system/etc/atucha.conf;

if [ "$ENABLED" -eq "0" ] 
then
	exit;
fi;

# initializing variables:
ACTUAL_TEMP=0;
JACK_ON=0;
INITIAL_BUFFER=8;
ACTUAL_BUFFER=8;

# Undervolt Fix
if [ ! -e /data/misc/xmister/undervolt ]; 
then 
#rm /data/misc/xmister/undervolt;
cp /proc/xmister/undervolt /data/misc/xmister/undervolt;
log -p i -t Atucha " *** Fixing Undervolt: missing UV file *** ";
fi;

# Verify if 3.5mm jack is plugged
CHECK_JACK()
{
sleep 1;
JACK_ON=`cat /sys/class/switch/h2w/state`;
if [ $JACK_ON -eq 1 ];
then
	if [ $ACTUAL_BUFFER -ne 64 ];
	then
		killall -KILL mediaserver;
		echo 64 > /proc/xmister/buffer;
		export ACTUAL_BUFFER=64;
		log -p i -t Atucha " ***  Music Mode ON ***  // Dynamic Audio Buffer: $ACTUAL_BUFFER;";
	fi;
else
	if [ $ACTUAL_BUFFER -ne $INITIAL_BUFFER ];
	then
		sleep 4;
		killall -KILL mediaserver;
		echo $INITIAL_BUFFER > /proc/xmister/buffer;
		ACTUAL_BUFFER=$INITIAL_BUFFER;
		log -p i -t Atucha " ***  Music Mode OFF ***  // Dynamic Audio Buffer: $ACTUAL_BUFFER;"
	fi;
fi;
}
if [ $CONFIGURATION = 0 ];
then
	SET_BUFFER()
	{
		log -p i -t Atucha " ***  MUSIC Mode  *** // max_freq=$MUSIC_MAX_FREQ // governor=$SLEEP_GOVERNOR // Auto Buffer: Off // undervolt=$MUSIC_UNDERVOLT";
	}
	EVENTUAL_JACK_CHECKER()
	{
		sleep 5;
	}
	PERIODICAL_JACK_CHECKER()
	{
		sleep $DELAY_BETWEEN_CHECKS;
	}
	log -p i -t Atucha " *** Running Atucha v$VERSION *** Basic Mode";
else
	# Read actual Audio Buffer Size
	INITIAL_BUFFER=`cat /proc/xmister/buffer`;
	if [ $INITIAL_BUFFER -eq 64 ];
	then
		export INITIAL_BUFFER=16;
	fi;
	export ACTUAL_BUFFER=$INITIAL_BUFFER;
	SET_BUFFER()
	{
		if [ $ACTUAL_BUFFER -ne 64 ];
		then
			killall -KILL mediaserver;
			echo 64 > /proc/xmister/buffer;
			export ACTUAL_BUFFER=64;
		fi;
	}
	if [ $CONFIGURATION = 1 ];
	then
	EVENTUAL_JACK_CHECKER()
	{
		CHECK_JACK;
		sleep 5;
	}
	PERIODICAL_JACK_CHECKER()
	{
		sleep $DELAY_BETWEEN_CHECKS;
	}
	log -p i -t Atucha " *** Running Atucha v$VERSION *** Music Mode";
	else
		EVENTUAL_JACK_CHECKER()
		{
		sleep 5;
		}
		PERIODICAL_JACK_CHECKER()
		{
			CHECK_JACK;
			sleep $DELAY_BETWEEN_CHECKS;
		}	
		log -p i -t Atucha " *** Running Atucha v$VERSION *** Dynamic Music Mode";
	fi;
fi;

#One-time tweaks to apply on every boot;
if [ $USE_TWEAKS -eq 1 ];
then

	#dd if=/sys/block/stl7 of=/dev/null bs=4k skip=0 count=51200

	STL=`ls -d /sys/block/stl*`;
	BML=`ls -d /sys/block/bml*`;
	MMC=`ls -d /sys/block/mmc*`;

	# Optimize non-rotating storage;
	if [ -e /sys/block/stl0/queue/iosched/back_seek_penalty ];
	then
		for i in $STL $BML $MMC;
		do
			echo $IO_SCHEDULER > $i/queue/scheduler;
			echo 0 > $i/queue/rotational;
			echo 1 > $i/queue/iosched/back_seek_penalty;
			echo 0 > $i/queue/iosched/slice_idle;
			echo 16 > $i/queue/iosched/quantum; # default: 4 (recomended: 16)
			echo 128 > $i/queue/read_ahead_kb;# default: 128; (recomended: 128)
			echo 128 > $i/queue/nr_requests;# default:128 (recomended: 2048)
			echo 16384 > $i/queue/iosched/back_seek_max; # default: 16384; (recomended: 16384)
			echo 1 > $i/queue/iosched/fifo_batch;
		done;
	elif [ -e /sys/block/stl0/queue/iosched/fifo_batch ];
	then
		for i in $STL $BML $MMC;
		do
			echo 1 > $i/queue/iosched/fifo_batch;
			echo 0 > $i/queue/rotational;
		done;
	else
		for i in $STL $BML $MMC;
		do
			echo 0 > $i/queue/rotational;
		done;
	fi;
	sleep 2;
	# remount all partitions with noatime,nodiratime;
	for k in $(busybox mount | cut -d " " -f3)
	do
		sync;
		busybox mount -o remount,noatime,nodiratime $k;
	done;
	# Optimize SD card
	if [ -e /sys/class/bdi/179:0/read_ahead_kb ];
	then
		echo 2048 > /sys/class/bdi/179:0/read_ahead_kb;
	fi; 
	sysctl -w vm.oom_kill_allocating_task=1
	#setprop dalvik.vm.startheapsize 8m; #off
	#echo 500 512000 64 2048 > /proc/sys/kernel/sem; #off
	#echo 64000 > /proc/sys/kernel/msgmni; #off
	#echo 5000 > /proc/sys/kernel/threads-max; #off
	#echo 0 > /proc/sys/kernel/hung_task_timeout_secs;
	setprop wifi.supplicant_scan_interval 180;
	setprop windowsmgr.max_events_per_sec 60;
	setprop ro.telephony.call_ring.delay 1000;
	#setprop ro.ril.disable.power.collapse 0; #off	
	#setprop pm.sleep_mode 1; #off	
	
	# Optimize TCP read/write
	setprop ro.ril.hsxpa 2
	setprop ro.ril.gprsclass 12
	setprop ro.ril.hep 1
	setprop ro.ril.enable.dtm 1
	setprop ro.ril.hsdpa.category 8 
	setprop ro.ril.enable.a53 1
	setprop ro.ril.enable.3g.prefix 1
	setprop ro.ril.htcmaskw1.bitmask 4294967295
	setprop ro.ril.htcmaskw1 14449
	setprop ro.ril.hsupa.category 5
	setprop net.tcp.buffersize.default 4096,87380,404480,4096,16384,404480;
	setprop net.tcp.buffersize.wifi 4096,87380,404480,4096,16384,404480;
	setprop net.tcp.buffersize.umts 4096,87380,404480,4096,16384,404480;
	echo 30 > /proc/sys/net/ipv4/tcp_fin_timeout #60
	echo 30 > /proc/sys/net/ipv4/tcp_keepalive_intvl;
	echo 5 > /proc/sys/net/ipv4/tcp_keepalive_probes;
	echo 0 > /proc/sys/net/ipv4/tcp_timestamps;
	echo 1 > /proc/sys/net/ipv4/tcp_tw_reuse;
	echo 256960 > /proc/sys/net/core/rmem_default;
	echo 256960 > /proc/sys/net/core/wmem_default;
	echo 4096 16384 404480 > /proc/sys/net/ipv4/tcp_wmem;
	echo 4096 87380 404480 > /proc/sys/net/ipv4/tcp_rmem;

	log -p i -t Atucha "*** Setting-up tweaks ***";

fi;

VM_ECONOMY()
{
echo 0 > /proc/sys/vm/swappiness;
echo 0 > /proc/sys/vm/dirty_expire_centisecs;
echo 0 > /proc/sys/vm/dirty_writeback_centisecs;
echo 60 > /proc/sys/vm/dirty_background_ratio;
echo 95 > /proc/sys/vm/dirty_ratio;
echo 10 > /proc/sys/vm/vfs_cache_pressure;
}

##################################################################################################################################################################################
# Settings by scheduler
if [ -e /proc/sys/kernel/rr_interval ];
then
	# BFS (Brain Fuck Scheduler)
	PERFORMANCE_TWEAKS()
	{
	echo $PROCESSOR_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
	echo $PROCESSOR_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
	#echo 30 > /proc/sys/vm/swappiness; #can be ignored if you dont use swap
	#echo 3000 > /proc/sys/vm/dirty_expire_centisecs; #can be ignored if you dont use swap
	#echo 500 > /proc/sys/vm/dirty_writeback_centisecs; #can be ignored if you dont use swap
	echo 0 > /proc/sys/vm/swappiness; #default: 30, can be ignored if you dont use swap
	echo 0 > /proc/sys/vm/dirty_expire_centisecs; #default: 3000, can be ignored if you dont use swap
	echo 0 > /proc/sys/vm/dirty_writeback_centisecs; #default: 500, can be ignored if you dont use swap
	echo 10 > /proc/sys/vm/dirty_background_ratio;
	echo 40 > /proc/sys/vm/dirty_ratio;
	echo 100 > /proc/sys/vm/vfs_cache_pressure;
	echo 3072 > /proc/sys/vm/min_free_kbytes;
	echo 0 > /proc/sys/vm/swappiness;
	# BFS (Brain Fuck Scheduler):
	echo 1 > /proc/sys/kernel/rr_interval; # default: 1;
	echo 100 > /proc/sys/kernel/iso_cpu;
	# log -p i -t Atucha "PERFORMANCE_TWEAKS()";
	}
	SLEEP_TWEAKS()
	{
	#VM_ECONOMY;
	echo 1652 > /proc/sys/vm/min_free_kbytes;
	# BFS tweeks
	echo 7 > /proc/sys/kernel/rr_interval;
	echo 60 > /proc/sys/kernel/iso_cpu;
	}
	
	MUSIC_TWEAKS()
	{
	#VM_ECONOMY;
	echo 3072 > /proc/sys/vm/min_free_kbytes;
	# BFS tweeks
	echo 4 > /proc/sys/kernel/rr_interval;
	echo 80 > /proc/sys/kernel/iso_cpu;
	}
	log -p i -t Atucha "*** BFS Scheduler detected: loading initial BFS settings ***";
	
else
	# CFS (Completely Fair Scheduler);
	PERFORMANCE_TWEAKS()
	{
	echo $PROCESSOR_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
	echo $PROCESSOR_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
	echo 0 > /proc/sys/vm/swappiness; #default: 30, can be ignored if you dont use swap
	echo 0 > /proc/sys/vm/dirty_expire_centisecs; #default: 3000, can be ignored if you dont use swap
	echo 0 > /proc/sys/vm/dirty_writeback_centisecs; #default: 500, can be ignored if you dont use swap
	echo 60 > /proc/sys/vm/dirty_background_ratio; #default: 10
	echo 95 > /proc/sys/vm/dirty_ratio; #default: #40
	echo 100 > /proc/sys/vm/vfs_cache_pressure;
	echo 3072 > /proc/sys/vm/min_free_kbytes;
	# CFS (Completely Fair Scheduler);
		echo 1000000 > /proc/sys/kernel/sched_wakeup_granularity_ns; # 3000000 
		echo 800000 > /proc/sys/kernel/sched_min_granularity_ns; # with 25000 also work
		echo 1000000 > /proc/sys/kernel/sched_latency_ns; # with 100000 also work
	}
	SLEEP_TWEAKS() # CFS (Completely Fair Scheduler);
	{
	#VM_ECONOMY;
	#echo 1652 > /proc/sys/vm/min_free_kbytes;
	# CFS tweeks
		echo 10000000 > /proc/sys/kernel/sched_latency_ns;
		echo 2000000 > /proc/sys/kernel/sched_wakeup_granularity_ns;
		echo 4000000 > /proc/sys/kernel/sched_min_granularity_ns;
	}
	MUSIC_TWEAKS()
	{
	#VM_ECONOMY;
	#echo 3072 > /proc/sys/vm/min_free_kbytes;
	# CFS tweeks
		echo 10000000 > /proc/sys/kernel/sched_latency_ns;
		echo 2000000 > /proc/sys/kernel/sched_wakeup_granularity_ns;
		echo 4000000 > /proc/sys/kernel/sched_min_granularity_ns;
	}
	log -p i -t Atucha "*** CFS Scheduler detected: loading initial CFS settings ***";
fi;

##################################################################################################################################################################################
SET_MUSIC()
{
echo $MUSIC_UP_THRESHOLD > /sys/devices/system/cpu/cpu0/cpufreq/$SLEEP_GOVERNOR/up_threshold;
echo $PROCESSOR_MIN_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
echo $MUSIC_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
sleep 5;
MUSIC_TWEAKS;
echo $MUSIC_UNDERVOLT > /proc/xmister/undervolt;
log -p i -t Atucha " ***  MUSIC Mode  *** // max_freq=$MUSIC_MAX_FREQ // governor=$SLEEP_GOVERNOR // Auto Buffer: $ACTUAL_BUFFER // undervolt=$MUSIC_UNDERVOLT";
}
SET_SLEEP()
{
echo $SLEEP_UP_THRESHOLD > /sys/devices/system/cpu/cpu0/cpufreq/$SLEEP_GOVERNOR/up_threshold;
echo $PROCESSOR_MIN_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
echo $SLEEP_MAX_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
sleep 5;
SLEEP_TWEAKS;
log -p i -t Atucha " ***  SLEEP Mode  *** // max_freq=$SLEEP_MAX_FREQ // governor=$SLEEP_GOVERNOR // Auto Buffer: Off // undervolt=$SLEEP_UNDERVOLT";
}
SET_BATT()
{
echo $BATT_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;
echo $BATT_UP_THRESHOLD > /sys/devices/system/cpu/cpu0/cpufreq/$BATT_GOVERNOR/up_threshold;
echo $PROCESSOR_MIN_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
EVENTUAL_JACK_CHECKER;
log -p i -t Atucha " ***  BATTERY Mode  *** // max_freq=$PROCESSOR_MAX_FREQ // governor=$BATT_GOVERNOR // BATT_UP_THRESHOLD=$BATT_UP_THRESHOLD // undervolt=$DEFAULT_UNDERVOLT";
sleep 60;
}
SET_USB()
{
echo $USB_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;
EVENTUAL_JACK_CHECKER;
log -p i -t Atucha " ***  USB Mode  *** // actual temp= $ACTUAL_TEMP // max_freq=$PROCESSOR_MAX_FREQ // governor=$USB_GOVERNOR // undervolt=$DEFAULT_UNDERVOLT";
sleep 60;
}
SET_OVERHEATING()
{
echo DEFAULT_BRIGHTNESS > /sys/class/leds/lcd-backlight/brightness;
echo $SLEEP_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor;
echo $PROCESSOR_MIN_FREQ > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
log -p i -t Atucha " ***  AUTOMATIC OVERHEAT PROTECTION  *** // max temp= $MAX_TEMP // actual temp= $ACTUAL_TEMP";
sleep 180;
ACTUAL_TEMP=`cat /sys/class/power_supply/battery/batt_temp`;
ACTUAL_GOV=$SLEEP_GOVERNOR;
}
##################################################################################################################################################################################
SCREEN_IS_OFF()
{
JACK_ON=0;
JACK_ON=`cat /sys/class/switch/h2w/state`;
if [ $JACK_ON -eq 1 ];
then
	SET_BUFFER;
	SET_MUSIC;
	echo $MUSIC_UNDERVOLT > /proc/xmister/undervolt;
else
	SET_SLEEP;
	echo $SLEEP_UNDERVOLT > /proc/xmister/undervolt;
fi;
sleep 10;
pidphone=`pidof com.android.phone`;
echo -17 > /proc/$pidphone/oom_adj;
renice -20 $pidphone;
}
##################################################################################################################################################################################
##################################################################################################################################################################################
#Background process to check screen state;
(while [ 2 ];
do
log -p i -t Atucha "Starting Screen Checker..."; 
while [ 0 ]; do
READ=`cat /sys/power/wait_for_fb_sleep`; echo $SLEEP_GOVERNOR > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor; sleep 10;
done;
log -p i -t Atucha "Screen Checker Error: Restarting..."; 
done &);

#Background process to check USB state;
ACTUAL_GOV="unknow";
(while [ 2 ]; do
log -p i -t Atucha "Starting USB Checker...";
while [ 0 ]; do
	PERFORMANCE_TWEAKS;
	sleep 4;
	while [ $ACTUAL_GOV != $SLEEP_GOVERNOR ];
	do
		SOURCE=`cat /sys/class/power_supply/battery/charging_source`; # [0=battery 1=USB 2=AC];
		if [ $SOURCE -eq 0 -a $ACTUAL_GOV != $BATT_GOVERNOR ]; # $SOURCE = 0 ==> Battery
		then
			SET_BATT;
		elif [ $SOURCE -gt 0 ]; # $SOURCE > 0 ==> USB / AC    -----  USB MODE
		then
			ACTUAL_TEMP=`cat /sys/class/power_supply/battery/batt_temp`;
			while [ $ACTUAL_TEMP -ge $MAX_TEMP ];
			do
				SET_OVERHEATING;
			test;
			done;
			if [ $ACTUAL_GOV != $USB_GOVERNOR ];
			then
				SET_USB;
			fi;
		fi;
		PERIODICAL_JACK_CHECKER;
		sleep 5;
		ACTUAL_GOV=`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`;
	test;
	done;
	SCREEN_IS_OFF;
	READ=`cat /sys/power/wait_for_fb_wake`;
	echo $DEFAULT_UNDERVOLT > /proc/xmister/undervolt;
	ACTUAL_GOV="unknow";
test;
done;
log -p i -t Atucha "USB Checker Error: Restarting..."; 
done &);
